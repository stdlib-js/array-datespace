{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar hasOwnProp = require( '@stdlib/assert-has-own-property' );\nvar isInteger = require( '@stdlib/assert-is-integer' );\nvar isString = require( '@stdlib/assert-is-string' ).isPrimitive;\nvar isObject = require( '@stdlib/assert-is-object' );\nvar format = require( '@stdlib/string-format' );\nvar floor = require( '@stdlib/math-base-special-floor' );\nvar round = require( '@stdlib/math-base-special-round' );\nvar ceil = require( '@stdlib/math-base-special-ceil' );\n\n\n// VARIABLES //\n\nvar timestamp = /^\\d{10}$|^\\d{13}$/;\nvar rounders = [ 'floor', 'ceil', 'round' ];\n\n\n// FUNCTIONS //\n\n/**\n* Validates a date parameter.\n*\n* @private\n* @param {*} value - value to be validated\n* @param {string} name - name to be used in error messages\n* @throws {TypeError} value must either be a date string, Date object, Unix timestamp, or JavaScript timestamp\n* @throws {Error} numeric date must be either a Unix or JavaScript timestamp\n* @returns {Date} validated date\n*/\nfunction validDate( value, name ) {\n\tvar type;\n\n\ttype = typeof value;\n\tif ( type === 'string' ) {\n\t\tvalue = Date.parse( value );\n\t\tif ( value !== value ) {\n\t\t\tthrow new Error( format( 'invalid argument. Unable to parse %s date.', name.toLowerCase() ) );\n\t\t}\n\t\tvalue = new Date( value );\n\t}\n\tif ( type === 'number' ) {\n\t\tif ( !timestamp.test( value ) ) {\n\t\t\tthrow new Error( format( 'invalid argument. Numeric %s date must be either a Unix or JavaScript timestamp.', name.toLowerCase() ) );\n\t\t}\n\t\tif ( value.toString().length === 10 ) {\n\t\t\tvalue *= 1000; // sec to ms\n\t\t}\n\t\tvalue = new Date( value );\n\t}\n\tif ( !(value instanceof Date) ) {\n\t\tthrow new TypeError( format( 'invalid argument. %s date must either be a date string, Date object, Unix timestamp, or JavaScript timestamp.', name ) );\n\t}\n\treturn value;\n}\n\n\n// MAIN //\n\n/**\n* Generates an array of linearly spaced dates.\n*\n* @param {(Date|number|string)} start - start time as either a `Date` object, Unix timestamp, JavaScript timestamp, or date string\n* @param {(Date|number|string)} stop - stop time as either a `Date` object, Unix timestamp, JavaScript timestamp, or date string\n* @param {number} [length] - output array length (default: 100)\n* @param {Object} [options] - function options\n* @param {string} [options.round] - specifies how sub-millisecond times should be rounded: [ 'floor', 'ceil', 'round' ] (default: 'floor' )\n* @throws {TypeError} length argument must a positive integer\n* @throws {Error} must provide valid options\n* @returns {Array} array of dates\n*\n* @example\n* var stop = '2014-12-02T07:00:54.973Z';\n* var start = new Date( stop ) - 60000;\n*\n* var arr = datespace( start, stop, 6 );\n* // returns [...]\n*\n* @example\n* // Equivalent of Math.ceil():\n* var arr = datespace( 1417503655000, 1417503655001, 3, { 'round': 'ceil' } );\n* // returns [...]\n*\n* // Equivalent of Math.round():\n* arr = datespace( 1417503655000, 1417503655001, 3, { 'round': 'round' } );\n* // returns [...]\n*/\nfunction datespace( start, stop, length, options ) {\n\tvar opts;\n\tvar len;\n\tvar flg;\n\tvar arr;\n\tvar end;\n\tvar fcn;\n\tvar tmp;\n\tvar d;\n\tvar i;\n\n\tlen = 100;\n\tflg = true;\n\topts = {\n\t\t'round': 'floor'\n\t};\n\tstart = validDate( start, 'Start' );\n\tstop = validDate( stop, 'Stop' );\n\tif ( arguments.length > 2 ) {\n\t\tif ( arguments.length === 3 ) {\n\t\t\tif ( isObject( length ) ) {\n\t\t\t\topts = length;\n\t\t\t} else {\n\t\t\t\tlen = length;\n\n\t\t\t\t// Turn off checking the options object...\n\t\t\t\tflg = false;\n\t\t\t}\n\t\t} else {\n\t\t\topts = options;\n\t\t\tlen = length;\n\t\t}\n\t\tif ( len === 0 ) {\n\t\t\treturn [];\n\t\t}\n\t\tif ( !isInteger( len ) || len < 0 ) {\n\t\t\tthrow new TypeError( format( 'invalid argument. Length must be a positive integer. Value: `%s`.', len ) );\n\t\t}\n\t\tif ( flg ) {\n\t\t\tif ( !isObject( opts ) ) {\n\t\t\t\tthrow new TypeError( format( 'invalid argument. Options argument must be an object. Value: `%s`.', opts ) );\n\t\t\t}\n\t\t\tif ( hasOwnProp( opts, 'round' ) ) {\n\t\t\t\tif ( !isString( opts.round ) ) {\n\t\t\t\t\tthrow new TypeError( format( 'invalid option. `%s` option must be a string. Option: `%s`.', 'round', opts.round ) );\n\t\t\t\t}\n\t\t\t\tif ( rounders.indexOf( opts.round ) === -1 ) {\n\t\t\t\t\tthrow new Error( format( 'invalid option. `%s` option must be one of the following: \"%s\". Option: `%s`.', 'round', rounders.join( '\", \"' ), opts.round ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tswitch ( opts.round ) {\n\tcase 'round':\n\t\tfcn = round;\n\t\tbreak;\n\tcase 'ceil':\n\t\tfcn = ceil;\n\t\tbreak;\n\tcase 'floor':\n\tdefault:\n\t\tfcn = floor;\n\t\tbreak;\n\t}\n\n\t// Calculate the increment...\n\tend = len - 1;\n\td = ( stop.getTime() - start.getTime() ) / end;\n\n\t// Build the output array...\n\tarr = new Array( len );\n\ttmp = start;\n\tarr[ 0 ] = tmp;\n\ttmp = tmp.getTime();\n\tfor ( i = 1; i < end; i++ ) {\n\t\ttmp += d;\n\t\tarr[ i ] = new Date( fcn( tmp ) );\n\t}\n\tarr[ end ] = stop;\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nmodule.exports = datespace;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Generate an array of linearly spaced dates.\n*\n* @module @stdlib/array-datespace\n*\n* @example\n* var datespace = require( '@stdlib/array-datespace' );\n*\n* var stop = '2014-12-02T07:00:54.973Z';\n* var start = new Date( stop ) - 60000;\n*\n* var arr = datespace( start, stop, 6 );\n* // returns [...]\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "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",
  "names": ["require_main", "__commonJSMin", "exports", "module", "hasOwnProp", "isInteger", "isString", "isObject", "format", "floor", "round", "ceil", "timestamp", "rounders", "validDate", "value", "name", "type", "datespace", "start", "stop", "length", "options", "opts", "len", "flg", "arr", "end", "fcn", "tmp", "d", "i", "main"]
}
